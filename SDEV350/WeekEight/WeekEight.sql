/*
SDEV 350 Database Security
Prof Eyler
Coe, Joshua
31 October 2020
SQL script for project 2
*/

--clean up the database and prep for creation
DROP TABLE SALES2019;
DROP TABLE PROJECTIONS2020;
DROP TABLE CUSTOMERS;
DROP USER U1WEEK8;
DROP USER U2WEEK8;
DROP USER U3WEEK8;
DROP ROLE R1WEEK8;
DROP PROFILE P2JOSHCOE;
--Create the customers table with an auto-incrementing PK of cutomerID
CREATE TABLE CUSTOMERS(
    CUSTOMERID NUMBER GENERATED ALWAYS AS IDENTITY,
    CUSTOMERLASTNAME VARCHAR2(40) NOT NULL,
    CUSTOMERFIRSTNAME VARCHAR2(40) NOT NULL,
    CUSTOMEREMAIL VARCHAR2(80) NOT NULL,
    CUSTOMERPHONE VARCHAR2(12),
    CUSTOMERCELLPHONE VARCHAR2(12),
    PRIMARY KEY(CUSTOMERID)
);
--Create the sales table with a composite of the userid and DTG as PK
--Added foreign constraint to enforce the use of an existing customerid
create table SALES2019(
    CUSTOMERID INTEGER NOT NULL,
    TRANSACTIONDATE DATE NOT NULL,
    SALESAMOUNT NUMBER(10,2) NOT NULL,
    PROFITAMOUNT NUMBER(10,2) NOT NULL,
    FOREIGN KEY(CUSTOMERID) REFERENCES CUSTOMERS(CUSTOMERID),
    PRIMARY KEY (CustomerID,TransactionDate)
);
--Create the projections table 
CREATE TABLE PROJECTIONS2020(
    CUSTOMERID INTEGER NOT NULL,
    QUARTERLYPURCHASEAMOUNT NUMBER(10,2) NOT NULL,
    QUARTERLYPROFITAMOUNT NUMBER(10,2) NOT NULL,
    CONFIDENCE NUMBER(4,2) NOT NULL,
    FOREIGN KEY(CUSTOMERID) REFERENCES CUSTOMERS(CUSTOMERID),
    PRIMARY KEY (CustomerID)
);
--create the profile
CREATE PROFILE P2JOSHCOE LIMIT
    FAILED_LOGIN_ATTEMPTS 4
    PASSWORD_LIFE_TIME 120
    PASSWORD_LOCK_TIME 1/24
    SESSIONS_PER_USER 25
    PASSWORD_VERIFY_FUNCTION ora12c_strong_verify_function;
--create the users
CREATE USER U1WEEK8
    IDENTIFIED BY "P@$$W0rd1234!@#$"
    DEFAULT TABLESPACE USERS
    QUOTA 30M ON USERS
    PROFILE P2JOSHCOE;

CREATE USER U2WEEK8
    IDENTIFIED BY "P@$$W0rd1234!@#$"
    DEFAULT TABLESPACE USERS
    QUOTA 30M ON USERS
    PROFILE P2JOSHCOE;

CREATE USER U3WEEK8
    IDENTIFIED BY "P@$$W0rd1234!@#$"
    DEFAULT TABLESPACE USERS
    QUOTA 30M ON USERS
    PROFILE P2JOSHCOE;
--create the role and grant it to the users
CREATE ROLE R1WEEK8;
GRANT CREATE SESSION TO R1WEEK8;
GRANT SELECT, INSERT, UPDATE, DELETE ON CUSTOMERS TO R1WEEK8;
GRANT SELECT, INSERT, UPDATE, DELETE ON PROJECTIONS2020 TO R1WEEK8;
GRANT SELECT, INSERT, UPDATE, DELETE ON SALES2019 TO R1WEEK8;

GRANT R1WEEK8 TO U1WEEK8;
GRANT R1WEEK8 TO U2WEEK8;
GRANT R1WEEK8 TO U3WEEK8;
--enable the required audits
AUDIT READ, INSERT, UPDATE, DELETE ON PROJECTIONS2020;
AUDIT READ, INSERT, UPDATE, DELETE ON SALES2019;
AUDIT READ, INSERT, UPDATE, DELETE ON CUSTOMERS;

--uncomment the below to run the audits.
--These statements should be run one at a time to retreive the desired records.
--get information on all transactions from the CUSTOMERS table
--SELECT username, extended_timestamp, sql_text FROM DBA_AUDIT_TRAIL WHERE (USERNAME = 'U3WEEK8' OR USERNAME ='U2WEEK8' OR USERNAME = 'U1WEEK8') AND obj_name ='CUSTOMERS';
--get information about every transaction needed
--SELECT * FROM DBA_AUDIT_TRAIL WHERE USERNAME = 'U3WEEK8' OR USERNAME ='U2WEEK8' OR USERNAME = 'U1WEEK8';
--get information for projections table
--SELECT username, extended_timestamp, obj_name FROM DBA_AUDIT_TRAIL WHERE (USERNAME = 'U3WEEK8' OR USERNAME ='U2WEEK8' OR USERNAME = 'U1WEEK8') AND obj_name ='PROJECTIONS2020';